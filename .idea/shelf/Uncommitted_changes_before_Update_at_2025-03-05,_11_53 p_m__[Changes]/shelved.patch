Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"4ad87460-eb5f-4b7d-9b9e-3d71287717ac\" name=\"Changes\" comment=\"Finished use case description for player profile\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPENED&quot;,\n    &quot;assignee&quot;: {\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\n      &quot;username&quot;: &quot;project_6893_bot_562df3f13b59cee76217ed80e143ee3d&quot;,\n      &quot;fullname&quot;: &quot;temptoken&quot;\n    }\n  }\n}</component>\n  <component name=\"GitLabMergeRequestsSettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;first&quot;: &quot;https://csgit.ucalgary.ca/ronakh.shariff/seng300-w25-project.git&quot;,\n    &quot;second&quot;: &quot;7c18e189-cefa-42c6-b129-a1a17172de27&quot;\n  }\n}</component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 4\n}</component>\n  <component name=\"ProjectId\" id=\"2tjpwugYBuAcozVwhlJsWpQTWap\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/talhazafar/Desktop/SENGProject/seng300-w25-project\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.gitlab.GitLabSettingsConfigurable\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"4ad87460-eb5f-4b7d-9b9e-3d71287717ac\" name=\"Changes\" comment=\"\" />\n      <created>1740875579466</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1740875579466</updated>\n      <workItem from=\"1740875580508\" duration=\"4000\" />\n      <workItem from=\"1740875589717\" duration=\"85000\" />\n      <workItem from=\"1740875676051\" duration=\"877000\" />\n      <workItem from=\"1740896093178\" duration=\"68000\" />\n      <workItem from=\"1740896166647\" duration=\"26000\" />\n      <workItem from=\"1741155938370\" duration=\"282000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Finished use case description for player profile\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Finished use case description for player profile\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1fde0bee303b96a883ce23a4ca83dea3fc21d4c7)
+++ b/.idea/workspace.xml	(date 1741244006836)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="4ad87460-eb5f-4b7d-9b9e-3d71287717ac" name="Changes" comment="Finished use case description for player profile">
+    <list default="true" id="4ad87460-eb5f-4b7d-9b9e-3d71287717ac" name="Changes" comment="Git test">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -48,21 +48,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "/Users/talhazafar/Desktop/SENGProject/seng300-w25-project",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "org.jetbrains.plugins.gitlab.GitLabSettingsConfigurable",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;feature-gui&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/talhazafar/Desktop/SENGProject/seng300-w25-project&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.gitlab.GitLabSettingsConfigurable&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -77,7 +78,25 @@
       <workItem from="1740896093178" duration="68000" />
       <workItem from="1740896166647" duration="26000" />
       <workItem from="1741155938370" duration="282000" />
+      <workItem from="1741236996845" duration="1625000" />
     </task>
+    <task id="LOCAL-00001" summary="Git test">
+      <option name="closed" value="true" />
+      <created>1741215110303</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1741215110303</updated>
+    </task>
+    <task id="LOCAL-00002" summary="Git test">
+      <option name="closed" value="true" />
+      <created>1741215121008</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1741215121008</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -96,6 +115,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Finished use case description for player profile" />
-    <option name="LAST_COMMIT_MESSAGE" value="Finished use case description for player profile" />
+    <MESSAGE value="Git test" />
+    <option name="LAST_COMMIT_MESSAGE" value="Git test" />
   </component>
 </project>
\ No newline at end of file
Index: useCaseDescriptions.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>START OF USE CASE DESCRIPTION\nUse case: Game Dashboard\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: To let the player see the games available in the game dashboard\n\nPreconditions:\nThe player is logged into the system\nThe system is running and showing the games in the game dashboard\n\nTrigger: The player has access to the game board after logging in (NOT SURE)\n\nScenario:\nThe player reaches the game dashboard after logging in and seeing the welcome page\nThe system shows the available games in the game dashboard\nThe player looks at all the available games in the game dashboard.\n\nPost conditions: (COME BACK)\nThe player can successfully see the lists of games available in the dashboard.\nThe system is waiting and ready for further interaction, for example, selecting a game from the available games in the dashboard.\n\nExceptions:\nThe games are not available/showing up\nSystem is down, fails to retrieve the games\n\nPriority: High\n\nWhen available: First iteration\n\nFrequency of use: Multiple times a day, every session\n\nChannel to actor: via GUI\n\nSecondary actors: System\n\nChannel to secondary actors: via the system (NOT SURE)\n\nOpen issues:\nShould similar games be listed under categories?\nEND OF USE CASE DESCRIPTION\n\n\nSTART OF USE CASE DESCRIPTION\nUse case: Welcome Page\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: To initially welcome the player to the gaming dashboard and encourage them to interact with the system.\n\nPreconditions:\n1. System must be powered on\n2. The system must be in initial state and connected to the Gaming Dashboard\n3. Game Dashboard is functional\n\nTrigger: Connected to the Gaming Dashboard: Once connected the system will present the initial welcome screen,\n\nScenario:\n1. Player connects to the gaming dashboard via network\n2. System loads Gaming dashboard server, where the welcome screen is initially presented.\n\nPost conditions:\n1. The customer will be prompted to input their password and user.\n\nExceptions:\n1. System is powered off\n2. Unable to connect to the gaming dashboard server.\n3. System fails to load the Welcome page, therefore an error message will be displayed,\n\nPriority: low\n\nWhen available: second iteration\n\nFrequency of use: Once per session\n\nChannel to actor: Through Graphical User Interface, the Welcome screen can be presented to the player.\n\nSecondary actors: System\n\nChannel to secondary actors: When connected to the Gaming Dashboard via network\n\nOpen issues:\n1. Should there be an option to proceed as a guest?\n2. Will there be accommodations for people with disabilities (i.e. Color blind, blind)\nEND OF USE CASE DESCRIPTION\n\nSTART OF USE CASE DESCRIPTION\n\nSTART OF USE CASE DESCRIPTION\nUse case: Quit Option\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: To allow the player to quit the game whenever the player wishes.\n\nPreconditions:\n1. There must be an active game.\n2. The player must be able to access the quit option.\n\nTrigger: The player presses the quit option when they choose to quit the game.\n\nScenario:\n1. Player wishes to confirm to quit.\n    a. Player is currently in an active game and wishes to quite\n    b. Player chooses the quit option on the screen.\n    c. PLayer confirms their selection when prompted with \"Are you sure?\"\n    d. PLayer loses the game and successfully quits.\n2. Player does not confirm to quit\n    a. Player is currently in an active game and wishes to quite\n    b. Player chooses the quit option on the screen.\n    c. PLayer changes their mind and selects \"no\" when prompted with \"Are you sure?\"\n    d. PLayer continues the game normally.\n\nPost conditions:\n1. Player must confirm their selection when prompted with \"Are you sure?\"\n2. If the player declines the game continues normally.\n\nExceptions:\n1. If the game crashes during the game session.\n2. Player loses network connection during the game session.\n3. The system fails to register teh quit function.\n\nPriority: High\n\nWhen available: first iteration\n\nFrequency of use: once per session\n\nChannel to actor: Through Graphical User Interface, the quit option will be a button for the player to click.\n\nSecondary actors: System\n\nChannel to secondary actors: When connected to a game in the gaming dashboard.\n\nOpen issues:\n1. How are we going to deal with the opponents game becoming disrupted?\n2. Should we allow the player to quit when the game is about to end?\n3. Should the player be banned from quitting after certain amount of quits?\nEND OF USE CASE DESCRIPTION\n\nSTART OF USE CASE DESCRIPTION\nUse case: Placing/Moving Pieces\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: Allows players to place or move pieces around in order for them to play the game. It gives functionality to Tic-Tac-Toe, Checkers, and Connect 4.\n\nPreconditions:\n1. There must be an active game (i.e Tic-Tac-Toe, Checkers, and Connect 4)\n2. Moving or placing of the piece must be a valid play:\n    a. Player move must be on the game grid.\n    b. PLayer move must obey game rules (how the pieces can be moved).\n3. It is players turn to move the piece.\n4. Network is connected for the game to register the player move.\n\nTrigger: The player selects the spot they would like to move the piece to.\n\nScenario:\n1. Player makes a move:\n    a. Player is playing Tic-Tac-Toe:\n        i. Players turn to place their piece.\n        ii. Player selects an empty space on the grid.\n        iii. The system places \"X\" or \"O\" to register the players choice.\n    b. Player is playing Connect 4:\n        i. Players turn to place their piece.\n        ii. Player selects a column that has empty spaces.\n        iii. Players piece (either blue or red) gets placed into the lowest available row in that column.\n    c. Player is playing Checkers:\n        i. It is the players turn to move a piece.\n        ii. Player selects one of their pieces and selects a valid diagonal move.\n        iii. If the player jumps over the opponents piece(s), their pieces are removed.\n        iv. If the piece is moved to the opponents end of the grid, their piece gets promoted to \"King\".\n2. If the move is valid the board gets updated, otherwise the player is prompted to make a valid move.\n3. Once the player has made their move, the system checks if the player won or drawn the game, otherwise control switches to the opponent.\n\nPost conditions:\n1. Game must update after player has successfully made a move.\n2. If the game has een won or drawn, the system should display the results\n3. Control should shift to the opponent if the game has not ended after the players move.\n\nExceptions:\n1. Invalid moves should not be accepted by the system (i.e. Placing outside the grid, Placement does not align with game rules, placing in a occupied space).\n2. If the player has quit upon their turn, they should not be eligible to make a move.\n3. Network connection is unstable to register the move.\n\nPriority: High\n\nWhen available: first iteration\n\nFrequency of use: many times per session\n\nChannel to actor: Through Graphical User Interface, the player can select where they would like to make their move by selecting the piece and the spot, or by simply selecting the spot.\n\nSecondary actors: System\n\nChannel to secondary actors: When player selects the spot they would like to make their move.\n\nOpen issues:\n1. Should there be a penalty if the player selects too many invalid moves?\n2. Should their be a time limit on how long a player can take to make their move?\n3. Should their be hints/recommendations given to the player on where they should make their move?\nEND OF USE CASE DESCRIPTION\n\nSTART OF USE CASE DESCRIPTION\nUse case: Create account\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: Option to allow players to create an account in the game dashboard.\n\nPreconditions:\n1. System is connected with the internet.\n2. Player is currently on the welcome page.\n\nTrigger: Clicking the create account option on the welcome page.\n\nScenario:\n1. Player connects with the Game Dashboard.\n2. Player wants to make an account\n3. Player selects \"Create Account\".\n\nPost conditions:\n1. Player must input correct information\n2. Player must not already have an account with the same information.\n3.\n\nExceptions:\n1. If the network is unstable.\n2. Player is on the Game Dashboard.\n3. Player already has an account with the same account information.\n\nPriority: High\n\nWhen available: first iteration\n\nFrequency of use: once\n\nChannel to actor: Option to select from on the graphical user interface.\n\nSecondary actors: System\n\nChannel to secondary actors: Registers through the system that the player wants to create an account\n\nOpen issues:\n1. Should one player be allowed to make multiple accounts\n2. Should their be an email verification.\n3. What if someone who a is not fluent in English cannot read the requirements of \"Create Account\"\nEND OF USE CASE DESCRIPTION\n\nSTART OF USE CASE DESCRIPTION\n\n\nUse Case: Leaderboard Display\n\nActors:\n- Primary Actor: Player\n- Secondary Actor: System\n\nPreconditions:\n- The player must be logged into the system and in Game Dashboard Page.\n\nTrigger:\n- The player navigates to the leaderboard interface.\n\nSituation:\n1. The player selects the Leaderboard option from the main menu or interface.\n2. The system retrieves the latest ranking data from the database.\n3. The system displays the leaderboard with rankings based on MMR, including:\n    -Top-ranked players sorted by MMR.\n    - Rank tiers displayed for each player:\n      - BRONZE = 1\n      - SILVER = 2\n      - GOLD = 3\n      - PLATINUM = 4\n      - DIAMOND = 5\n      - MASTER = 6\n      - GRANDMASTER = 7\n      - MMR ranges dynamically adjusted based on the min and max MMR caps of the game.\n    - Player statistics, such as wins, losses, and total score.\n    - User’s own rank highlighted within the leaderboard.\n4. The player can:\n    - Search for specific players.\n    - Filter leaderboard results (Global, Friends-Only, Ranked Mode, etc.).\n    - View a player’s profile for more details.\n5. The player can exit the leaderboard and return to the previous screen.\n\nPostconditions:\n- The system successfully displays the **ranked leaderboard** with the latest data.\n- If an error occurs, the player is informed through an appropriate message.\n\nExceptions:\n- If the leaderboard data is unavailable, the system displays an error message.\n- If the database is down, the system logs an error and provides a retry option.\n- If the *player’s rank cannot be determined**, a placeholder message is displayed.\n\nPriority:\n- High\n\nWhen Available:\n- First iteration\n\nFrequency of Use:\n- Multiple times a day, every session\n\nChannel to Actor:\n- Graphical User Interface (GUI)\n\nChannel to Secondary Actors:\n- System backend and database\n\nOpen Issues:\n- Should players be able to see historical rankings?\n- Should rank progression trends be visualized?\nEND OF USE CASE DESCRIPTION\n\nSTART OF USE CASE DESCRIPTION\nUse case: Selecting games from available library\n\nActors:\n- Primary Actor: Player\n- Secondary Actor: System\n\nPreconditions:\n- The player must be logged into the system and in Game Dashboard Page.\n\nTrigger:\n- The player navigates to game dashboard.\n\nSituation:\n1. Player is logged into their game account.\n2. Player can view available games\n    Tic Tac Toe\n    Checkers\n    Connect4\n3. Play has the option to select one  or multiple games\n\nPostconditions:\n- The system successfully runs selected game.\n\nExceptions:\n- if the game does not run, player has to refresh or choose another game.\n- Players are limited to three different games.\n\nPriority:\n- High\n\nWhen Available:\n- First iteration\n\nFrequency of Use:\n- Multiple times a day, every session\n\nChannel to Actor:\n- Graphical User Interface (GUI)\n\nChannel to Secondary Actors:\n- System backend and database\n\nOpen Issues:\n- Should players be able to select the same game many times in one session?\n- Can players select more than one game to play?\n\n\n\nSTART OF USE CASE DESCRIPTION\nUse case: In-game chat\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: The player can successfully type and send messages in the in-game chat during the match\n\nPreconditions:\nThe player is logged into the system\nThe player has joined a game\n\nTrigger: The player selects the “In-game chat” from the Menu\n\nScenario:\nThe player joins a game\nThe player clicks on the “Menu option”\nThe player selects the “In-game Chat” option.\nThe player types a message\nThe player sends the message\n\nPost conditions:\nThe player’s message is shown in the chat window\nThe opponent can see the message.\n\nExceptions:\nThe player is playing against a bot.\n\nPriority: Medium\n\nWhen available: Second iteration\n\nFrequency of use: Multiple times a day, every session\n\nChannel to actor: via GUI\n\nSecondary actors: System(might remove)\n\nChannel to secondary actors: The system handles message sending, receiving, and displaying via in-game communication protocols (might remove)\n\nOpen issues:\nShould the system have a filter, in order to make sure no mean comments are made?\nEND OF USE CASE DESCRIPTION\n\n\n\n\nSTART OF USE CASE DESCRIPTION\nUse case: Menu Option\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: The player can successfully access the different options such as quit and in-game chat from the menu option\n\nPreconditions:\nThe player is logged into the system\nThe player has joined a game\n\nTrigger: The player selects the “Menu Option” in the game\n\nScenario:\nThe player joins a game\nThe player clicks on the “Menu option”\n\nPost conditions:\nThe player can see further options after clicking on “Menu Option”\n\nExceptions:\nThe menu fails to open\n\nPriority: High\n\nWhen available: First iteration\n\nFrequency of use: Multiple times a day, every session\n\nChannel to actor: via GUI\n\nSecondary actors:\n\nChannel to secondary actors:\n\nOpen issues:\nShould the game be paused when the player clicks on the menu option?\nEND OF USE CASE DESCRIPTIONS\n\n\n\nSTART OF USE CASE DESCRIPTION\nUse case: Manage Account\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: To allow the player to manage their account by updating their account details, such as notifications or privacy settings, language preferences, and changing their username or password\n\nPreconditions:\nThe player is logged into the system\nThe player is in “Game Dashboard”\n\nTrigger: The player clicks on “Manage Account”\n\nScenario:\nThe player is in the Game Dashboard\nThe player clicks on the “Settings Option”\nThe player selects the “Manage Account” option\nThe player selects an option and does the appropriate details required by the option they selected.\n\nPost conditions:\nThe player’s account gets updated from the changes made.\n\nExceptions:\nThe new information entered by the player is not valid\nFail to save changes due to a server error\n\nPriority: Medium\n\nWhen available: First iteration\n\nFrequency of use: Multiple times a day, every session\n\nChannel to actor: via GUI\n\nSecondary actors: System (NOT SURE)\n\nChannel to secondary actors: via system database (NOT SURE)\n\nOpen issues: N/A\nEND OF USE CASE DESCRIPTION\n\n\n\n\nSTART OF USE CASE DESCRIPTION\nUse case: Log out\n\nIteration: First\n\nPrimary Actor: Player\n\nGoal in context: To allow the player to log out of the game platform\n\nPreconditions:\nThe player is logged into the system\nThe player is in “Game Dashboard”\n\nTrigger: The player selects the “Log out” option from the settings\n\nScenario:\nThe player is in the Game Dashboard\nThe player clicks on the “Settings Option”\nThe player selects the “Log out” option\n\nPost conditions:\nThe player is successfully logged out of the game platform\nThe session is closed\n\nExceptions:\nThe player fails to log out due to a server error\n\nPriority: High\n\nWhen available: First iteration\n\nFrequency of use: Multiple times a day, every session\n\nChannel to actor: via GUI\n\nSecondary actors: System\n\nChannel to secondary actors: ????\n\nOpen issues: N/A\nEND OF USE CASE DESCRIPTION
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/useCaseDescriptions.txt b/useCaseDescriptions.txt
--- a/useCaseDescriptions.txt	(revision 1fde0bee303b96a883ce23a4ca83dea3fc21d4c7)
+++ b/useCaseDescriptions.txt	(date 1741243987248)
@@ -549,4 +549,41 @@
 Channel to secondary actors: ????
 
 Open issues: N/A
-END OF USE CASE DESCRIPTION
\ No newline at end of file
+END OF USE CASE DESCRIPTION
+
+Use Case: View Profiles
+Iteration: First
+Primary Actor: Player
+Goal in Context: To allow a player to view another player's profile and check their game statistics, ranking, and match history.
+Preconditions:
+The player must be logged into the system.
+The profile being viewed must exist in the database.
+The system must be connected to the game server or data storage.
+Trigger: The player selects a profile from the leaderboard, match history, or search function.
+Scenario:
+The player navigates to a list of players (e.g., leaderboard, recent matches, or search results).
+The player selects a player’s profile from the list
+The system retrieves the player’s profile data from the database.
+The system displays the profile, showing:
+Username and avatar
+Games played
+Win/Loss record
+Current ranking
+Recent match history
+The player views the profile and may navigate back or challenge the player
+Postconditions:
+The system successfully displays the requested profile.
+If an error occurs, the system informs the user through an appropriate message.
+Exceptions:
+Profile data fails to load → The system displays a “Profile could not be loaded” message with a retry option.
+User profile does not exist → The system returns a “User not found” error.
+Database is unreachable → An error message is shown, and the system attempts to reconnect.
+Priority: High
+When Available: First iteration
+Frequency of Use: Multiple times per session
+Channel to Actor: Via GUI
+Secondary Actors: N/A
+Open Issues:
+Should users be able to send messages from the profile screen?
+Should profiles display a player’s online status?
+Should there be privacy settings to limit profile visibility?

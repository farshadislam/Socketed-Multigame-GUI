Use case: Player plays a game of chess with another player
Iteration: 1
Last Modification Data: March 1
Primary Actor: Player
Goal in context: The two players take turns making chess moves, and the moves follow the rules of chess.

Preconditions:
1. Both players are able to connect to the network for a multiplayer session.
2. Both players agreed to play together for at least a few turns
Trigger: The player chooses to connect with another player to start a new game.

Scenario:
1. The player launches the chess application.
2. The player selects "Multiplayer Mode."
3. The system searches for available opponents or allows the player to invite a friend.
4. The second player accepts the invitation or joins a matchmaking lobby.
5. The system initializes a new chess game and assigns colors (white or black).
6. The player with the white pieces makes the first move.
7. The second player responds by making a move.
8. The players continue to take turns making legal chess moves.
9. The system validates each move according to chess rules.
10. The game continues until a checkmate, stalemate, draw, or resignation occurs.
11. The system updates the game result (win/loss/draw) and player statistics.
12.The players may choose to start a new game or exit the session.

Post conditions:
1. The game is completed, and the system updates the playersâ€™ records/statistics.
2. The game session ends, and both players can either start a new game or exit.

Exceptions:
1. Lost Connection: If either player loses network connectivity, the game may pause, offer reconnection, or result in a forfeit.
2. Illegal Moves: If a player attempts an illegal move, the system prevents the move and notifies the player.
3. Player Abandons Game: If one player leaves or does not respond within a time limit, the other player wins by forfeit.
4. System Crash: If the application crashes or an unexpected error occurs, the game may be lost unless it supports auto-save or reconnection.

Priority: High
Priority: Medium
When Available: When both players are online and in a multiplayer session
Frequency of Use: Depends on player activity (can be used multiple times per session)
Channel to Actor: Chess game interface (app or web interface)
Secondary Actors: Game server, matchmaking system, ranking/statistics system
Channel to Secondary Actors: Network connection (server communication)

Open issues:
1. Should there be a time limit for each move?
2. How does the system handle ties in case of a sudden disconnection?
3. Should there be a built-in chat or reaction system for player communication?